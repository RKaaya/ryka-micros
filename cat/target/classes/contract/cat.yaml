openapi: 3.0.1
info:
  title: Swagger Catstore
  description: 'This is a sample server Cat store server.'
  version: 1.0.0
tags:
  - name: cat
    description: Everything about your Cats
paths:
  /cat:
    put:
      tags:
        - cat
      summary: Update an existing cat
      operationId: updateCat
      requestBody:
        description: Cat object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cat'
          application/xml:
            schema:
              $ref: '#/components/schemas/Cat'
        required: true
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: Cat not found
          content: {}
        405:
          description: Validation exception
          content: {}
      security:
        - jwtAuth: []
      x-codegen-request-body-name: body
    post:
      tags:
        - cat
      summary: Add a new cat to the store
      operationId: addCat
      requestBody:
        description: Cat object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cat'
          application/xml:
            schema:
              $ref: '#/components/schemas/Cat'
        required: true
      responses:
        401:
          $ref: '#/components/responses/UnauthorizedError'
        405:
          description: Invalid input
          content: {}
      security:
        - jwtAuth: []
      x-codegen-request-body-name: body
  /cat/{catId}:
    get:
      tags:
        - cat
      summary: Find cat by ID
      description: Returns a single cat
      operationId: getCatById
      parameters:
        - name: catId
          in: path
          description: ID of cat to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Cat'
            application/json:
              schema:
                $ref: '#/components/schemas/Cat'
        400:
          description: Invalid ID supplied
          content: {}
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: Cat not found
          content: {}
      security:
        - jwtAuth: []
    post:
      tags:
        - cat
      summary: Updates a cat in the store with form data
      operationId: updateCatWithForm
      parameters:
        - name: catId
          in: path
          description: ID of cat that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Updated name of the cat
                status:
                  type: string
                  description: Updated status of the cat
      responses:
        401:
          $ref: '#/components/responses/UnauthorizedError'
        405:
          description: Invalid input
          content: {}
      security:
        - jwtAuth: []
    delete:
      tags:
        - cat
      summary: Deletes a cat
      operationId: deleteCat
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: catId
          in: path
          description: Cat id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: Cat not found
          content: {}
      security:
        - jwtAuth: []

components:
  schemas:
    Cat:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: Spotty
        status:
          type: string
          description: cat status in the store
          enum:
            - available
            - pending
            - sold
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
  securitySchemes:
    jwtAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
